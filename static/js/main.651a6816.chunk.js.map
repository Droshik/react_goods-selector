{"version":3,"sources":["App.js","index.js"],"names":["goods","map","item","i","name","id","App","state","selectedNames","selectedId","toggleSelection","good","includes","index","indexOf","splice","setState","push","clearSelection","className","this","join","length","type","onClick","key","classNames","selected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAiBMA,G,MAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAG4BC,KAAI,SAACC,EAAMC,GAAP,MAChC,CACEC,KAAMF,EACNG,GAAIF,OA4EOG,E,4MAvEbC,MAAQ,CACNC,cAAe,GACfC,WAAY,I,EAGdC,gBAAkB,SAACC,GACjB,IAAMJ,EAAK,eAAQ,EAAKA,OAExB,GAAI,EAAKA,MAAME,WAAWG,SAASD,EAAKN,IAAK,CAC3C,IAAMQ,EAAQN,EAAME,WAAWK,QAAQH,EAAKN,IAE5CE,EAAME,WAAWM,OAAOF,EAAO,GAC/BN,EAAMC,cAAcO,OAAOF,EAAO,GAClC,EAAKG,SAAST,QAEdA,EAAMC,cAAcS,KAAKN,EAAKP,MAC9BG,EAAME,WAAWQ,KAAKN,EAAKN,IAC3B,EAAKW,SAAST,I,EAIlBW,eAAiB,WACf,EAAKF,SAAS,CACZR,cAAe,GACfC,WAAY,M,uDAIN,IAAD,OACP,OACE,yBAAKU,UAAU,OACb,+CAEG,IACAC,KAAKb,MAAMC,cAAca,KAAK,OAEhCD,KAAKb,MAAME,WAAWa,OAAS,GAE9B,4BACEC,KAAK,SACLC,QAASJ,KAAKF,gBAFhB,SAQF,wBAAIC,UAAU,QACXnB,EAAMC,KAAI,SAAAU,GAAI,OACb,wBACEc,IAAKd,EAAKN,GACVc,UAAWO,IAAW,aAAc,CAClCC,SAAU,EAAKpB,MAAME,WAAWG,SAASD,EAAKN,OAGhD,8BAAOM,EAAKP,MACZ,4BACEmB,KAAK,SACLC,QAAS,WACP,EAAKd,gBAAgBC,KAHzB,wB,GAxDIiB,IAAMC,WCpBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.651a6816.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst goods = goodsFromServer.map((item, i) => (\n  {\n    name: item,\n    id: i,\n  }\n));\n\nclass App extends React.Component {\n  state = {\n    selectedNames: [],\n    selectedId: [],\n  }\n\n  toggleSelection = (good) => {\n    const state = { ...this.state };\n\n    if (this.state.selectedId.includes(good.id)) {\n      const index = state.selectedId.indexOf(good.id);\n\n      state.selectedId.splice(index, 1);\n      state.selectedNames.splice(index, 1);\n      this.setState(state);\n    } else {\n      state.selectedNames.push(good.name);\n      state.selectedId.push(good.id);\n      this.setState(state);\n    }\n  }\n\n  clearSelection = () => {\n    this.setState({\n      selectedNames: [],\n      selectedId: [],\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          Selected good: -\n          {' '}\n          {this.state.selectedNames.join(', ')}\n        </h1>\n        {this.state.selectedId.length > 0\n        && (\n          <button\n            type=\"button\"\n            onClick={this.clearSelection}\n          >\n            Clear\n          </button>\n        )\n        }\n        <ul className=\"list\">\n          {goods.map(good => (\n            <li\n              key={good.id}\n              className={classNames('list__item', {\n                selected: this.state.selectedId.includes(good.id),\n              })}\n            >\n              <span>{good.name}</span>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.toggleSelection(good);\n                }}\n              >\n                Add/Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}